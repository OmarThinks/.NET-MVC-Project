@model PaginatedList<Application.Models.Comment>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>








<form asp-controller="comments" asp-action="Index">
    <p>
        Content: <input type="text" name="searchString" />
        <input type="submit" value="Filter" />
    </p>
</form>









@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@ViewData["searchString"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-searchString="@ViewData["searchString"]"
   class="btn btn-default @nextDisabled">
    Next
</a>








<table class="table">
    <thead>
        <tr>
            <th>
                Content
            </th>
            <th>
                Post
            </th>
            <th>
                AuthorId
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CommentId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CommentId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CommentId">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
